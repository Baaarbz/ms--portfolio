name: CD/CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Run unit test
        run: ./gradlew clean test --stacktrace --no-configuration-cache
  integration-test:
    name: Integration test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Run integration test
        run: ./gradlew clean integrationTest --stacktrace --no-configuration-cache
  acceptance-test:
    name: Acceptance test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Run acceptance test
        run: ./gradlew clean acceptanceTest --stacktrace --no-configuration-cache

  build:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Docker üêã
    runs-on: ubuntu-latest
    needs:
      - acceptance-test
      - integration-test
      - unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build --exclude-task acceptanceTest --exclude-task integrationTest --exclude-task test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Dashboard to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub üêã
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: baaarbz/portfolio-api:latest

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Deploy üöÄ
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy the application üöÄ
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker stop portfolio-api || true
            docker rm portfolio-api || true
            docker rmi baaarbz/portfolio-api || true
            docker pull baaarbz/portfolio-api:latest
            docker run -d --rm -p 8000:8000 -e DB_USERNAME=${{ secrets.DB_USERNAME }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -e AUTH_USR=${{ secrets.AUTH_USERNAME }} -e AUTH_PWD=${{ secrets.AUTH_PASSWORD }} --name portfolio-api baaarbz/portfolio-api:latest --restart always